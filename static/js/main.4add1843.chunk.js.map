{"version":3,"sources":["components/Content/Content.js","components/Header/Header.js","components/Layout/Layout.js","helpers/miscellenous.js","components/Heading/Heading.js","components/Input/Input.js","components/Content/Score/Score.js","components/Content/Circles/Circles.js","components/Button/Button.js","components/Content/Controls/Controls.js","App.js","index.js"],"names":["interval","Header","props","className","Layout","children","getRandomNumber","to","Math","floor","random","isEqual","item1","item2","toLowerCase","Heading","heading","Input","maxLength","type","placeholder","id","value","onChange","event","inputChangeHandler","disabled","Score","style","textAlign","score","Circles","useState","limit","arr","i","push","getNumbersArray","circles","console","log","autoSelectedPosition","map","item","index","Fragment","key","backgroundColor","onClick","selectedPosition","incrementScore","decrementScore","Button","buttonClickHandler","name","Controls","startGame","stopGame","Content","setScore","setAutoSelectedPosition","prevState","changeAutoSelectedPosition","setInterval","clearInterval","alert","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4add1843.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { getRandomNumber } from '../../helpers/miscellenous';\nimport Heading from '../Heading/Heading';\nimport Score from './Score/Score';\nimport Circles from './Circles/Circles';\nimport Controls from './Controls/Controls';\nimport './Content.css';\n\nvar interval;\n\nconst Content = (props) => {\n\n    const [score, setScore] = useState(0);\n    const [autoSelectedPosition, setAutoSelectedPosition] = useState(0);\n\n    const startGame = () => {\n        interval = setInterval(() => {\n            setAutoSelectedPosition(getRandomNumber(36));\n        }, 1000);\n    };\n\n    const stopGame = () => {\n        clearInterval(interval);\n        alert('Your final score is ' + score);\n        setScore(0);\n        setAutoSelectedPosition(0);\n    };\n\n    return (\n        <div className=\"content\">\n            <Heading heading=\"Hit the circle\" />\n            <p>Testing your skill how many circles you can hit ?</p>\n            <p>Click on Play button to start the game</p>\n            <Score score={score} />\n            <hr />\n            <Circles\n                autoSelectedPosition={autoSelectedPosition}\n                incrementScore={() => setScore(prevState => prevState + 1)}\n                decrementScore={() => setScore(prevState => prevState - 1)}\n                changeAutoSelectedPosition={() => setAutoSelectedPosition(getRandomNumber(36))}\n            />\n            <hr />\n            <Controls\n                autoSelectedPosition={autoSelectedPosition}\n                startGame={startGame}\n                stopGame={stopGame} />\n        </div>\n    );\n};\n\nexport default Content;\n","import React from 'react';\nimport './Header.css';\n\nconst Header = (props) => {\n    return (\n        <div className=\"header\">\n            <p>leadsquared</p>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport Header from '../Header/Header';\n\nconst Layout = (props) => {\n    return (\n        <div className=\"layout\">\n            <Header />\n            {props.children}\n        </div>\n    );\n};\n\nexport default Layout;\n","\nexport const parseData = (data) => {\n    return JSON.parse(JSON.stringify(data));\n};\n\nexport const validateValues = (value) => {\n    var regex = /^[a-zA-Z0-9!@#$%^&*)(. _-]{0,16}$/;\n    return regex.test(value);\n};\n\nexport const getNumbersArray = (limit) => {\n    const arr = [];\n    for (let i = 1; i <= limit; i++) {\n        arr.push(i);\n    }\n    return arr;\n};\n\nexport const getRandomNumber = (to) => {\n    return Math.floor(Math.random() * to) + 1;\n};\n\nexport const isEqual = (item1, item2) => {\n    if (typeof (item1) === 'number' && typeof (item2) === 'number') {\n        return item1 === item2;\n    }\n    if (typeof (item1) === 'string' && typeof (item2) === 'string') {\n        return item1.toLowerCase() === item2.toLowerCase();\n    }\n};\n\nexport const isObjectEmpty = (obj) => {\n    return Object.keys(obj).length === 0;\n};\n\nexport const isEmpty = (item) => {\n    if (typeof item === 'number') {\n        return false;\n    }\n    return item.trim() === '';\n};\n\nexport const isArrayNotEmpty = (arr) => {\n    return arr.length > 0;\n};\n\nexport const indexOf = (arr, value) => {\n    return arr.indexOf(value);\n};\n\nexport const isBoolean = (value) => {\n    return typeof value === \"boolean\";\n};\n\nexport const isNumber = (value) => {\n    return typeof value === \"number\";\n};\n\nexport const isString = (value) => {\n    return typeof value === \"string\";\n};\n\nexport const deleteItem = (array, id) => {\n    const updatedData = array.filter(item => item !== id);\n    return updatedData;\n};\n\nexport const isIncludes = (array, value) => {\n    return array.includes(value);\n};\n","import React from 'react';\n\nconst Heading = (props) => {\n    return (\n        <h2 className=\"heading\">\n            {props.heading}\n        </h2>\n    );\n};\n\nexport default Heading;\n","import React from 'react';\nimport './Input.css';\n\nconst Input = (props) => {\n    return (\n        <input\n            maxLength={props.maxLength}\n            type={props.type}\n            placeholder={props.placeholder}\n            id={props.id}\n            value={props.value}\n            onChange={(event) => props.inputChangeHandler(event)}\n            disabled={props.disabled} />\n    );\n};\n\nexport default Input;\n","import React from 'react';\nimport Input from '../../Input/Input';\n\nconst Score = (props) => {\n    return (\n        <div style={{ textAlign: 'right' }}>\n            <label>Score </label>\n            <Input\n                type=\"number\"\n                placeholder=\"Score\"\n                value={props.score}\n                disabled={true} />\n        </div>\n    );\n};\n\nexport default Score;\n","import React, { useState } from 'react';\nimport { getNumbersArray, isEqual } from '../../../helpers/miscellenous';\n\nconst Circles = (props) => {\n\n    const [circles] = useState(getNumbersArray(36));\n\n    const selectCircle = (selectedPosition) => {\n        if (isEqual(props.autoSelectedPosition, selectedPosition)) {\n            props.incrementScore();\n            // props.changeAutoSelectedPosition();\n        } else {\n            props.decrementScore();\n        }\n    };\n\n    const getCircles = () => {\n        return (\n            circles.map((item, index) => {\n                return (\n                    <React.Fragment key={item}>\n                        <div\n                            className=\"circle\"\n                            style={{ backgroundColor: props.autoSelectedPosition === (index + 1) ? '#00bb00' : '' }}\n                            onClick={() => !isEqual(props.autoSelectedPosition, 0) ? selectCircle(item) : ''}></div>\n                        {item % 6 === 0 && <br />}\n                    </React.Fragment>\n                );\n            })\n        );\n    };\n\n    console.log('==selectedPosition====', props.autoSelectedPosition);\n\n    return (\n        <div className=\"circle-wrapper\">\n            {getCircles()}\n        </div>\n    );\n};\n\nexport default Circles;\n","import React from 'react';\nimport './Button.css';\n\nconst Button = (props) => {\n    return (\n        <button\n            disabled={props.disabled}\n            onClick={() => props.buttonClickHandler()}>{props.name}</button>\n    );\n};\n\nexport default Button\n","import React from 'react';\nimport Button from '../../Button/Button';\n\nconst Controls = (props) => {\n    return (\n        <div className=\"controls\">\n            <Button name={props.autoSelectedPosition ? 'Playing' : 'Play'} buttonClickHandler={props.startGame} />\n            <Button name={'Stop'} buttonClickHandler={props.stopGame} disabled={props.autoSelectedPosition ? false : true} />\n        </div>\n    );\n};\n\nexport default Controls;\n","import React from 'react';\nimport Layout from './components/Layout/Layout';\nimport Content from './components/Content/Content';\n\nconst App = (props) => {\n    return (\n        <div className=\"app\">\n            <Layout>\n                <Content />\n            </Layout>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\n"],"sourceRoot":""}